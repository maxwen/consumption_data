/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import kotlinx.serialization.SerialName
import org.openapitools.client.models.BillingUnitReference
import org.openapitools.client.models.RemarkCodeListBillingUnitEntry

import kotlinx.serialization.Serializable
import kotlinx.serialization.encodeToString
import kotlinx.serialization.json.Json

/**
 * Service configuration for a billing unit.
 *
 * @param reference 
 * @param consumptiondata True if consumption data services are enabled for this billing unit.
 * @param lastperiod Identifier of a consumption period with year and month.
 * @param lastperiodupdate The timestamp of the last data update for the last period.
 * @param servicestart Identifier of a consumption period with year and month.
 * @param remarkcodes statuslist on billing unit base
 */

@Serializable
data class ServiceConfigurationBillingUnit (

    @SerialName("reference")
    val reference: BillingUnitReference,

    /* True if consumption data services are enabled for this billing unit. */
    @SerialName("consumptiondata")
    val consumptiondata: kotlin.Boolean,

    /* Identifier of a consumption period with year and month. */
    @SerialName("lastperiod")
    val lastperiod: kotlin.String? = null,

    /* The timestamp of the last data update for the last period. */
    @SerialName("lastperiodupdate")
    val lastperiodupdate: kotlin.String? = null,

    /* Identifier of a consumption period with year and month. */
    @SerialName("servicestart")
    val servicestart: kotlin.String? = null,

    /* statuslist on billing unit base */
    @SerialName("remarkcodes")
    val remarkcodes: kotlin.collections.List<RemarkCodeListBillingUnitEntry>? = null

) {
    override fun toString(): String {
        val prettyJson = Json { // this returns the JsonBuilder
            prettyPrint = true
            // optional: specify indent
            prettyPrintIndent = " "
        }
        return prettyJson.encodeToString(this)
    }


}

